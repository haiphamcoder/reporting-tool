services:
  mysql-server:
    image: mysql:8.2
    container_name: mysql-server
    user: root
    ports:
      - "3306:3306"
    env_file:
      - .env
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
    command: mysqld --default-authentication-plugin=caching_sha2_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    healthcheck:
      test: [ "CMD", "/usr/bin/mysql", "--user=root", "--password=${MYSQL_ROOT_PASSWORD}", "--execute", "SELECT 1" ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    volumes:
      - mysql-data:/var/lib/mysql
      - ./database/mysql-server/init:/docker-entrypoint-initdb.d
      - ./database/mysql-server/my.cnf:/etc/mysql/conf.d/my.cnf
    restart: always
    networks:
      reporting-tool-network:
        ipv4_address: 172.19.80.2

  hdfs-standalone:
    image: apache/hadoop:3.4.0
    container_name: hdfs-standalone
    hostname: hdfs-standalone
    user: root
    ports:
      - "9870:9870"
      - "9000:9000"
      - "9864:9864"
      - "9866:9866"
    env_file:
      - .env
    environment:
      - HADOOP_HOME=/opt/hadoop
      - HADOOP_HEAPSIZE=2048
    volumes:
      - namenode-data:/hadoop/dfs/namenode
      - datanode-data:/hadoop/dfs/datanode
      - ./database/hadoop/config/core-site.xml:/opt/hadoop/etc/hadoop/core-site.xml
      - ./database/hadoop/config/hdfs-site.xml:/opt/hadoop/etc/hadoop/hdfs-site.xml
      - ./database/hadoop/script/start-standalone.sh:/start-standalone.sh
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://hdfs-standalone:9870/" ]
      interval: 30s
      timeout: 5s
      retries: 3
    command: [ "/bin/bash", "-c", "/start-standalone.sh" ]
    restart: always
    networks:
      reporting-tool-network:
        ipv4_address: 172.19.80.3

  tidb-server:
    image: pingcap/tidb:v8.5.0
    container_name: tidb-server
    user: root
    ports:
      - "4000:4000"
    env_file:
      - .env
    command:
      - --config=/tidb.toml
      - --path=/data
    volumes:
      - ./database/tidb/tidb.toml:/tidb.toml:ro
      - tidb-data:/data
    restart: always
    networks:
      reporting-tool-network:
        ipv4_address: 172.19.80.4

  eureka-discovery-server:
    build: ./eureka-discovery-server
    container_name: eureka-discovery-server
    env_file:
      - .env
    environment:
      - DISCOVERY_SERVER_URL=http://eureka-discovery-server:8761
    ports:
      - "8761:8761"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8761/actuator/health" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      reporting-tool-network:
        ipv4_address: 172.19.80.5
    restart: always

  user-management-service:
    build: ./user-management-service
    container_name: user-management-service
    env_file:
      - .env
    environment:
      - DISCOVERY_SERVER_URL=http://eureka-discovery-server:8761
      - MYSQL_SERVER_HOST=mysql-server
      - MYSQL_SERVER_PORT=3306
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
    ports:
      - "8092:8080"
      - "9090:9090"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/actuator/health" ]
      interval: 30s
      timeout: 5s
      retries: 5
      start_period: 60s
    networks:
      reporting-tool-network:
        ipv4_address: 172.19.80.8
    depends_on:
      eureka-discovery-server:
        condition: service_healthy
    restart: always

  authentication-service:
    build: ./authentication-service
    container_name: authentication-service
    env_file:
      - .env
    environment:
      - SPRING_PROFILES_ACTIVE=local
      - DISCOVERY_SERVER_URL=http://eureka-discovery-server:8761
      - MYSQL_SERVER_HOST=mysql-server
      - MYSQL_SERVER_PORT=3306
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - USER_MANAGEMENT_SERVICE_HOST=user-management-service
      - USER_MANAGEMENT_SERVICE_PORT=9090
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - OAUTH2_GOOGLE_CLIENT_ID=${OAUTH2_GOOGLE_CLIENT_ID}
      - OAUTH2_GOOGLE_CLIENT_SECRET=${OAUTH2_GOOGLE_CLIENT_SECRET}
      - OAUTH2_GOOGLE_REDIRECT_URI=${OAUTH2_GOOGLE_REDIRECT_URI}
    ports:
      - "8091:8080"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/actuator/health" ]
      interval: 30s
      timeout: 5s
      retries: 5
      start_period: 60s
    networks:
      reporting-tool-network:
        ipv4_address: 172.19.80.7
    depends_on:
      eureka-discovery-server:
        condition: service_healthy
    restart: always

  reporting-service:
    build: ./reporting-service
    container_name: reporting-service
    env_file:
      - .env
    environment:
      - DISCOVERY_SERVER_URL=http://eureka-discovery-server:8761
      - MYSQL_SERVER_HOST=mysql-server
      - MYSQL_SERVER_PORT=3306
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
    ports:
      - "8093:8080"
      - "9091:9091"
      - "9092:9092"
    volumes:
      - ./reporting-service/config/core-site.xml:/app/config/core-site.xml
      - ./reporting-service/config/hdfs-site.xml:/app/config/hdfs-site.xml
    networks:
      reporting-tool-network:
        ipv4_address: 172.19.80.9
    depends_on:
      eureka-discovery-server:
        condition: service_healthy
    restart: always

  data-processing-service:
    build: ./data-processing-service
    container_name: data-processing-service
    env_file:
      - .env
    environment:
      - DISCOVERY_SERVER_URL=http://eureka-discovery-server:8761
      - MYSQL_SERVER_HOST=mysql-server
      - MYSQL_SERVER_PORT=3306
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - REPORTING_SERVICE_HOST=reporting-service
      - TIDB_SERVER_HOST=tidb-server
      - TIDB_SERVER_PORT=4000
      - TIDB_USERNAME=${TIDB_USERNAME}
      - TIDB_PASSWORD=${TIDB_PASSWORD}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
    ports:
      - "8094:8080"
    volumes:
      - ./data-processing-service/config/core-site.xml:/app/config/core-site.xml
      - ./data-processing-service/config/hdfs-site.xml:/app/config/hdfs-site.xml
    networks:
      reporting-tool-network:
        ipv4_address: 172.19.80.10
    depends_on:
      eureka-discovery-server:
        condition: service_healthy
    restart: always

  integrated-service:
    build: ./integrated-service
    container_name: integrated-service
    env_file:
      - .env
    environment:
      - DISCOVERY_SERVER_URL=http://eureka-discovery-server:8761
      - MYSQL_SERVER_HOST=mysql-server
      - MYSQL_SERVER_PORT=3306
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - TELEGRAM_BOT_USERNAME=${TELEGRAM_BOT_USERNAME}
    ports:
      - "8095:8080"
    networks:
      reporting-tool-network:
        ipv4_address: 172.19.80.11
    depends_on:
      eureka-discovery-server:
        condition: service_healthy
    restart: always

  api-gateway:
    build: ./api-gateway
    container_name: api-gateway
    env_file:
      - .env
    environment:
      - DISCOVERY_SERVER_URL=http://eureka-discovery-server:8761
      - CORS_ALLOWED_ORIGINS=${CORS_ALLOWED_ORIGINS}
    ports:
      - "8765:8765"
    depends_on:
      eureka-discovery-server:
        condition: service_healthy
    networks:
      reporting-tool-network:
        ipv4_address: 172.19.80.6
    restart: always

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.production
    container_name: reporting-tool-frontend
    environment:
      - NODE_ENV=production
      - VITE_APP_ENV=production
      - VITE_API_BASE_URL=http://api.reporting-tool.site:8765
      - VITE_FRONTEND_URL=http://reporting-tool.site:80
    ports:
      - "80:80"
    env_file:
      - .env
    restart: always
    networks:
      reporting-tool-network:
        ipv4_address: 172.19.80.12

networks:
  reporting-tool-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.19.80.0/24
          gateway: 172.19.80.1

volumes:
  namenode-data:
  datanode-data:
  tidb-data:
  mysql-data: