name: Pre-deploy Check

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

jobs:
  code-check:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Java
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
        
    - name: Check Java code formatting
      run: |
        echo "Checking Java code formatting..."
        # Add your Java code formatting check here
        # Example: mvn spotless:check
        
    - name: Check frontend code formatting
      run: |
        echo "Checking frontend code formatting..."
        cd frontend
        npm ci
        npm run lint
        
    - name: Check Dockerfile syntax
      run: |
        echo "Checking Dockerfile syntax..."
        for dockerfile in $(find . -name "Dockerfile*"); do
          echo "Checking $dockerfile"
          docker run --rm -i hadolint/hadolint < "$dockerfile" || true
        done
        
    - name: Check docker-compose syntax
      run: |
        echo "Checking docker-compose syntax..."
        docker compose -f docker-compose.prod.yml config
        
    - name: Check for sensitive data
      run: |
        echo "Checking for sensitive data in code..."
        # Check for hardcoded passwords, API keys, etc.
        if grep -r "password.*=" . --exclude-dir=.git --exclude-dir=node_modules --exclude-dir=target; then
          echo "Warning: Found potential hardcoded passwords"
        fi
        
    - name: Check file permissions
      run: |
        echo "Checking file permissions..."
        chmod +x scripts/deploy.sh
        
    - name: Summary
      run: |
        echo "âœ… Pre-deploy checks completed"
        echo "Code is ready for deployment" 